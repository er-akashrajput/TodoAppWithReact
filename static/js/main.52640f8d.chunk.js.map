{"version":3,"sources":["components/Note.js","App.js","reportWebVitals.js","index.js"],"names":["Note","className","onClick","this","props","deleteMethod","text","Component","App","handleKeyPress","event","key","addNote","state","noteText","notes","setState","target","value","push","textInput","focus","index","notesArr","splice","map","val","deleteNote","bind","type","placeholder","onChange","updateNoteText","ref","input","onKeyPress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAsBeA,G,6KAfP,OACI,sBAAKC,UAAU,gBAAgBC,QAASC,KAAKC,MAAMC,aAAnD,UACI,qBAAKJ,UAAU,OAAf,SACI,oBAAGA,UAAU,WAAb,cAA0BE,KAAKC,MAAME,UAEzC,qBAAKL,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SACI,mD,GAXLM,cC+DJC,E,kDA7Db,WAAYJ,GAAQ,IAAD,8BACjB,cAAMA,IAoBRK,eAAiB,SAACC,GACE,UAAdA,EAAMC,KACR,EAAKC,WArBP,EAAKC,MAAQ,CACXC,SAAU,GACVC,MAAO,IAJQ,E,2DAQJD,GACbX,KAAKa,SAAS,CAAEF,SAAUA,EAASG,OAAOC,U,gCAId,KAAxBf,KAAKU,MAAMC,WAEEX,KAAKU,MAAME,MACnBI,KAAKhB,KAAKU,MAAMC,UACzBX,KAAKa,SAAS,CAAEF,SAAU,KAC1BX,KAAKiB,UAAUC,W,iCAQNC,GACT,IAAIC,EAAWpB,KAAKU,MAAME,MAC1BQ,EAASC,OAAOF,EAAO,GACvBnB,KAAKa,SAAS,CAAED,MAAOQ,M,+BAKf,IAAD,OAEHR,EAAQZ,KAAKU,MAAME,MAAMU,KAAI,SAACC,EAAKf,GACrC,OAAO,cAAC,EAAD,CAELL,KAAMoB,EACNrB,aAAc,kBAAM,EAAKsB,WAAWhB,KAF/BA,MAKT,OACE,sBAAKV,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,iCACA,iGACCc,EACD,qBAAKd,UAAU,MAAMC,QAASC,KAAKS,QAAQgB,KAAKzB,MAAhD,gBACA,uBAAO0B,KAAK,OAAO5B,UAAU,YAC3B6B,YAAY,oDACZZ,MAAOf,KAAKU,MAAMC,SAClBiB,SAAU,SAAAjB,GAAQ,OAAI,EAAKkB,eAAelB,IAC1CmB,IAAM,SAACC,GAAY,EAAKd,UAAYc,GACpCC,WAAYhC,KAAKM,eAAemB,KAAKzB,e,GAvD7BI,aCQH6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.52640f8d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Note extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"noteContainer\" onClick={this.props.deleteMethod}>\r\n                <div className=\"note\" >\r\n                    <p className=\"noteText\"> {this.props.text}</p>\r\n                </div>\r\n                <div className=\"overlay\">\r\n                    <div className=\"middle\">\r\n                        <h4>Delete</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Note;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Note from \"./components/Note\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      noteText: '',\r\n      notes: [],\r\n    }\r\n  }\r\n\r\n  updateNoteText(noteText) {\r\n    this.setState({ noteText: noteText.target.value })\r\n  }\r\n\r\n  addNote() {\r\n    if (this.state.noteText === '') { return }\r\n\r\n    const notesArr = this.state.notes;\r\n    notesArr.push(this.state.noteText);\r\n    this.setState({ noteText: '' });\r\n    this.textInput.focus();\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    if (event.key === 'Enter') {\r\n      this.addNote();\r\n    }\r\n  }\r\n  deleteNote(index) {\r\n    let notesArr = this.state.notes;\r\n    notesArr.splice(index, 1);\r\n    this.setState({ notes: notesArr })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let notes = this.state.notes.map((val, key) => {\r\n      return <Note\r\n        key={key}\r\n        text={val}\r\n        deleteMethod={() => this.deleteNote(key)} />\r\n    })\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"header\">Todo App with React</div>\r\n        <p>NOTE: To delete a note, Just click on it. Yeah! Its that simple.</p>\r\n        {notes}\r\n        <div className=\"btn\" onClick={this.addNote.bind(this)} > +</div>\r\n        <input type=\"text\" className=\"textInput\"\r\n          placeholder=\"Type here and Press ENTER or '+' Button to save. \"\r\n          value={this.state.noteText}\r\n          onChange={noteText => this.updateNoteText(noteText)}\r\n          ref={((input) => { this.textInput = input })}\r\n          onKeyPress={this.handleKeyPress.bind(this)}\r\n        />\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}